import { Series, Pattern } from "./../interfaces/interfaces";
declare let defaultHandler: (seriesData: Series) => Series;
declare let computeServerTimestamp: (series: Series) => Series;
declare let assignPattern: (series: Series, patterns: Pattern[], defaultPattern: Pattern) => Series;
declare let assignRowName: (series: Series, defaultPattern: Pattern, row_col_wrapper: String) => Series;
declare let assignColName: (series: Series, defaultPattern: Pattern, row_col_wrapper: String) => Series;
declare let assignDecimals: (series: Series, defaultPattern: Pattern) => Series;
declare let transformValue: (series: Series, defaultPattern: Pattern) => Series;
declare let transformValueOverrides: (series: Series) => Series;
declare let assignBGColors: (series: Series, defaultPattern: Pattern) => Series;
declare let applyBGColorOverrides: (series: Series) => Series;
declare let applyFontAwesomeIcons: (series: Series) => Series;
declare let applyImageTransform: (series: Series) => Series;
declare let assignClickableLinks: (series: Series) => Series;
declare let assignRowColKey: (series: Series) => Series;
declare let assignThresholds: (series: Series, defaultPattern: Pattern) => Series;
declare let assignValue: (series: Series, defaultPattern: Pattern) => Series;
declare let filterValues: (series: Series) => Boolean;
declare let compute: (dataComputed: Series[], defaultPattern: Pattern, patterns: Pattern[], row_col_wrapper: String) => Series[];
export { compute, defaultHandler, assignPattern, assignRowName, assignColName, assignRowColKey, assignThresholds, assignValue, filterValues, computeServerTimestamp, assignDecimals, assignBGColors, applyBGColorOverrides, transformValue, transformValueOverrides, applyFontAwesomeIcons, applyImageTransform, assignClickableLinks };
