System.register(["lodash", "./BoomUtils"], function (exports_1, context_1) {
    "use strict";
    var lodash_1, BoomUtils_1, BoomOutput;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (lodash_1_1) {
                lodash_1 = lodash_1_1;
            },
            function (BoomUtils_1_1) {
                BoomUtils_1 = BoomUtils_1_1;
            }
        ],
        execute: function () {
            BoomOutput = (function () {
                function BoomOutput(options) {
                    this.default_title_for_rows = options.default_title_for_rows || '';
                    this.hide_first_column = options.hide_first_column;
                    this.hide_headers = options.hide_headers;
                    this.text_alignment_firstcolumn = options.text_alignment_firstcolumn || '';
                    this.text_alignment_values = options.text_alignment_values || '';
                    this.first_column_link = options.first_column_link || '#';
                }
                return BoomOutput;
            }());
            exports_1("BoomOutput", BoomOutput);
            BoomOutput.prototype.getDataAsHTML = function (data, sorting_props) {
                var _this = this;
                var getColumnAsLink = function (rowName, first_column_link, raw_rowName) {
                    if (first_column_link !== '#') {
                        first_column_link = first_column_link.replace(new RegExp('_row_name_', 'g'), BoomUtils_1.getActualNameWithoutTokens(raw_rowName).trim());
                        rowName = "<a href=\"" + first_column_link + "\" target=\"_blank\">" + rowName + "</a>";
                    }
                    return rowName;
                };
                var output = {
                    body: '',
                };
                if (sorting_props &&
                    sorting_props.col_index !== undefined &&
                    sorting_props.col_index > -1 &&
                    data &&
                    data.output &&
                    data.output.length >= sorting_props.col_index) {
                    var sortFunction_1 = function (a, b, sortMethod) {
                        if (sortMethod === 'asc') {
                            return a[sorting_props.col_index].value - b[sorting_props.col_index].value;
                        }
                        else {
                            return b[sorting_props.col_index].value - a[sorting_props.col_index].value;
                        }
                    };
                    data.output = data.output
                        .filter(function (a) { return !isNaN(a[sorting_props.col_index].value); })
                        .concat(data.output.filter(function (a) { return isNaN(a[sorting_props.col_index].value); }))
                        .sort(function (a, b) { return sortFunction_1(a, b, sorting_props.direction); });
                }
                lodash_1.default.each(data.output, function (o) {
                    if (o.map(function (item) { return item.hidden.toString(); }).indexOf('false') > -1) {
                        output.body += '<tr>';
                        if (_this.hide_first_column !== true) {
                            var raw_rowName = lodash_1.default.first(o.map(function (item) { return item.row_name_raw; }));
                            output.body += "\n                    <td style=\"padding:4px;text-align:" + _this.text_alignment_firstcolumn + "\">\n                        " + getColumnAsLink(lodash_1.default.first(o.map(function (item) { return item.row_name; })), String(_this.first_column_link), raw_rowName) + "\n                    </td>";
                        }
                        lodash_1.default.each(o, function (item) {
                            var item_style = "padding:4px;background-color:" + item.color_bg + ";color:" + item.color_text + ";text-align:" + _this.text_alignment_values;
                            var item_display = item.link === '#'
                                ? item.display_value
                                : "<a href=\"" + item.link + "\" target=\"_blank\" style=\"color:" + item.color_text + "\">" + item.display_value + "</a>";
                            var tooltip = !item.tooltip || item.tooltip === '-'
                                ? undefined
                                : " data-toggle=\"tooltip\" data-html=\"true\" data-placement=\"auto\" title=\"" + item.tooltip + "\" ";
                            output.body += "\n                    <td style=\"" + item_style + "\">\n                        " + (tooltip ? "<span " + tooltip + ">" : '') + "\n                            " + item_display + "\n                        " + (tooltip ? "</span>" : '') + "\n                    </td>\n                ";
                        });
                        output.body += '</tr>';
                    }
                });
                return output;
            };
            BoomOutput.prototype.getDataAsDebugHTML = function (data) {
                var debugData = "";
                debugData = lodash_1.default.map(data, function (d) {
                    return "\n        <tr>\n            <td style=\"padding:4px;text-align:left;width:30%; title=\"Series Name\" >" + d.seriesName + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"Matching Pattern Name\" >" + (d.pattern.name || d.pattern.pattern || 'Default') + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"Value : " + String(d.value_formatted || 'null') + " / Raw : " + String(d.value || 'null') + " / Stat : " + d.pattern.valueName + "\">" + d.display_value + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"Row name\" >" + d.row_name + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"Col name\" >" + d.col_name + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"Thresholds\" >" + d.thresholds.join(',') + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"BG Color\" >" + d.color_bg + "</td>\n            <td style=\"padding:4px;text-align:left;width:10%; title=\"Text Color\" >" + d.color_text + "</td>\n        </tr>\n        ";
                }).join("");
                return debugData;
            };
        }
    };
});
//# sourceMappingURL=data:application/json;base64,