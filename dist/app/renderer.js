System.register(["lodash", "./utils"], function (exports_1, context_1) {
    "use strict";
    var lodash_1, utils, buildHTML, buildDebugHTML;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (lodash_1_1) {
                lodash_1 = lodash_1_1;
            },
            function (utils_1) {
                utils = utils_1;
            }
        ],
        execute: function () {
            buildHTML = function (elem, hide_headers, hide_first_column, text_align_table_header, cols_found, output, text_align_first_column, text_align_table_cells, default_title_for_rows) {
                var boomtable_output_body_headers = elem.find("#boomtable_output_body_headers");
                var boomtable_output_body_headers_output = "<br/>";
                if (hide_headers !== true) {
                    boomtable_output_body_headers_output += "<tr>";
                    if (hide_first_column !== true) {
                        boomtable_output_body_headers_output += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + default_title_for_rows + "</th>";
                    }
                    lodash_1.default.each(lodash_1.default.uniq(cols_found), function (c) {
                        boomtable_output_body_headers_output += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + c + "</th>";
                    });
                    boomtable_output_body_headers_output += "</tr>";
                }
                boomtable_output_body_headers.html(boomtable_output_body_headers_output);
                var boomtable_output_body = elem.find("#boomtable_output_body");
                var boomtable_output_body_output = "";
                lodash_1.default.each(output, function (o) {
                    boomtable_output_body_output += "<tr>";
                    if (hide_first_column !== true) {
                        boomtable_output_body_output += "<td style=\"padding:4px;text-align:" + text_align_first_column + "\">" + o.row + "</td>";
                    }
                    lodash_1.default.each(o.cols, function (c) {
                        boomtable_output_body_output += "<td\n                style=\"padding:4px;background-color:" + c.bgColor + ";text-align:" + text_align_table_cells + ";color:" + c.textColor + "\"\n                title=\"" + ("Row Name : " + utils.getActualNameWithoutTransformSign(c.actual_row_name) + "\nCol Name : " + utils.getActualNameWithoutTransformSign(c.actual_col_name) + "\nValue : " + c.value) + "\"\n              >" + c.displayValue + "</td>";
                    });
                    boomtable_output_body_output += "</tr>";
                });
                boomtable_output_body.html(boomtable_output_body_output);
            };
            exports_1("buildHTML", buildHTML);
            buildDebugHTML = function (elem, dataComputed) {
                var debug_table_holder = elem.find("#boomtable_debug_table_holder");
                var debug_output = "\n        <table class=\"table-panel-table\">\n            <thead>\n                <tr>\n                    <th style=\"padding:4px;text-align:center\">Metric</th>\n                    <th style=\"padding:4px;text-align:center\">Pattern</th>\n                    <th style=\"padding:4px;text-align:center\">Value</th>\n                    <th style=\"padding:4px;text-align:center\">Row Name</th>\n                    <th style=\"padding:4px;text-align:center\">Col Name</th>\n                    <th style=\"padding:4px;text-align:center\">Thresholds</th>\n                </tr>\n            </thead>\n            <tbody id=\"boomtable_output_body_debug\">\n    ";
                lodash_1.default.each(dataComputed, function (d) {
                    debug_output += "\n          <tr>\n            <td style=\"padding:4px;\" width=\"40%\">" + d.alias + "</td>\n            <td style=\"padding:4px;\">" + (d.pattern.pattern || "Default") + "</td>\n            <td style=\"padding:4px;background-color:" + d.bgColor + "\">" + d.displayValue + "</td>\n            <td style=\"padding:4px;\">" + d.row_name + "</td>\n            <td style=\"padding:4px;\">" + d.col_name + "</td>\n            <td style=\"padding:4px;\">" + d.thresholds + "</td>\n          </tr>\n          ";
                });
                debug_output += "\n        </tbody>\n        </table>\n    ";
                debug_table_holder.html(debug_output);
            };
            exports_1("buildDebugHTML", buildDebugHTML);
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBwL3JlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O1lBR0ksU0FBUyxHQUFHLFVBQVMsSUFBUyxFQUFFLFlBQXFCLEVBQUUsaUJBQTBCLEVBQUUsdUJBQTRCLEVBQUUsVUFBZSxFQUFFLE1BQWEsRUFBRSx1QkFBNEIsRUFBRSxzQkFBMkIsRUFBRSxzQkFBMkI7Z0JBQ3ZPLElBQUksNkJBQTZCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO2dCQUNoRixJQUFJLG9DQUFvQyxHQUFHLE9BQU8sQ0FBQztnQkFDbkQsSUFBSSxZQUFZLEtBQUssSUFBSSxFQUFFO29CQUN2QixvQ0FBb0MsSUFBSSxNQUFNLENBQUM7b0JBQy9DLElBQUksaUJBQWlCLEtBQUssSUFBSSxFQUFFO3dCQUM1QixvQ0FBb0MsSUFBSSx3Q0FBcUMsdUJBQXVCLFdBQUssc0JBQXNCLFVBQU8sQ0FBQztxQkFDMUk7b0JBQ0QsZ0JBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsVUFBQSxDQUFDO3dCQUN4QixvQ0FBb0MsSUFBSSx3Q0FBcUMsdUJBQXVCLFdBQUssQ0FBQyxVQUFPLENBQUM7b0JBQ3RILENBQUMsQ0FBQyxDQUFDO29CQUNILG9DQUFvQyxJQUFJLE9BQU8sQ0FBQztpQkFDbkQ7Z0JBQ0QsNkJBQTZCLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7Z0JBQ3pFLElBQUkscUJBQXFCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO2dCQUNoRSxJQUFJLDRCQUE0QixHQUFHLEVBQUUsQ0FBQztnQkFDdEMsZ0JBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFVBQUEsQ0FBQztvQkFDWiw0QkFBNEIsSUFBSSxNQUFNLENBQUM7b0JBQ3ZDLElBQUksaUJBQWlCLEtBQUssSUFBSSxFQUFFO3dCQUM1Qiw0QkFBNEIsSUFBSSx3Q0FBcUMsdUJBQXVCLFdBQUssQ0FBQyxDQUFDLEdBQUcsVUFBTyxDQUFDO3FCQUNqSDtvQkFDRCxnQkFBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLFVBQUEsQ0FBQzt3QkFDWiw0QkFBNEIsSUFBSSwrREFDVSxDQUFDLENBQUMsT0FBTyxvQkFBZSxzQkFBc0IsZUFBVSxDQUFDLENBQUMsU0FBUyxxQ0FDaEcsYUFBYSxHQUFHLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLEdBQUcsZUFBZSxHQUFHLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLEdBQUcsWUFBWSxHQUFHLENBQUMsQ0FBQyxLQUFLLDRCQUMxTCxDQUFDLENBQUMsWUFBWSxVQUFPLENBQUM7b0JBQy9CLENBQUMsQ0FBQyxDQUFDO29CQUNILDRCQUE0QixJQUFJLE9BQU8sQ0FBQztnQkFDNUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ0gscUJBQXFCLENBQUMsSUFBSSxDQUFDLDRCQUE0QixDQUFDLENBQUM7WUFDN0QsQ0FBQyxDQUFDOztZQUNFLGNBQWMsR0FBRyxVQUFTLElBQVMsRUFBRSxZQUFpQjtnQkFDdEQsSUFBSSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLCtCQUErQixDQUFDLENBQUM7Z0JBQ3BFLElBQUksWUFBWSxHQUFHLDJwQkFhbEIsQ0FBQztnQkFDRixnQkFBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsVUFBQSxDQUFDO29CQUNsQixZQUFZLElBQUksNEVBRTJCLENBQUMsQ0FBQyxLQUFLLHVEQUNuQixDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxTQUFTLHFFQUNmLENBQUMsQ0FBQyxPQUFPLFdBQUssQ0FBQyxDQUFDLFlBQVksc0RBQzNDLENBQUMsQ0FBQyxRQUFRLHNEQUNWLENBQUMsQ0FBQyxRQUFRLHNEQUNWLENBQUMsQ0FBQyxVQUFVLHVDQUV4QyxDQUFDO2dCQUNSLENBQUMsQ0FBQyxDQUFDO2dCQUNILFlBQVksSUFBSSw0Q0FHZixDQUFDO2dCQUNGLGtCQUFrQixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMxQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tIFwibG9kYXNoXCI7XHJcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuL3V0aWxzXCI7XHJcblxyXG5sZXQgYnVpbGRIVE1MID0gZnVuY3Rpb24oZWxlbTogYW55LCBoaWRlX2hlYWRlcnM6IGJvb2xlYW4sIGhpZGVfZmlyc3RfY29sdW1uOiBib29sZWFuLCB0ZXh0X2FsaWduX3RhYmxlX2hlYWRlcjogYW55LCBjb2xzX2ZvdW5kOiBhbnksIG91dHB1dDogYW55W10sIHRleHRfYWxpZ25fZmlyc3RfY29sdW1uOiBhbnksIHRleHRfYWxpZ25fdGFibGVfY2VsbHM6IGFueSwgZGVmYXVsdF90aXRsZV9mb3Jfcm93czogYW55ICk6IHZvaWQge1xyXG4gICAgbGV0IGJvb210YWJsZV9vdXRwdXRfYm9keV9oZWFkZXJzID0gZWxlbS5maW5kKFwiI2Jvb210YWJsZV9vdXRwdXRfYm9keV9oZWFkZXJzXCIpO1xyXG4gICAgbGV0IGJvb210YWJsZV9vdXRwdXRfYm9keV9oZWFkZXJzX291dHB1dCA9IGA8YnIvPmA7XHJcbiAgICBpZiAoaGlkZV9oZWFkZXJzICE9PSB0cnVlKSB7XHJcbiAgICAgICAgYm9vbXRhYmxlX291dHB1dF9ib2R5X2hlYWRlcnNfb3V0cHV0ICs9IFwiPHRyPlwiO1xyXG4gICAgICAgIGlmIChoaWRlX2ZpcnN0X2NvbHVtbiAhPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICBib29tdGFibGVfb3V0cHV0X2JvZHlfaGVhZGVyc19vdXRwdXQgKz0gYDx0aCBzdHlsZT1cInBhZGRpbmc6NHB4O3RleHQtYWxpZ246JHt0ZXh0X2FsaWduX3RhYmxlX2hlYWRlcn1cIj4ke2RlZmF1bHRfdGl0bGVfZm9yX3Jvd3N9PC90aD5gO1xyXG4gICAgICAgIH1cclxuICAgICAgICBfLmVhY2goXy51bmlxKGNvbHNfZm91bmQpLCBjID0+IHtcclxuICAgICAgICAgICAgYm9vbXRhYmxlX291dHB1dF9ib2R5X2hlYWRlcnNfb3V0cHV0ICs9IGA8dGggc3R5bGU9XCJwYWRkaW5nOjRweDt0ZXh0LWFsaWduOiR7dGV4dF9hbGlnbl90YWJsZV9oZWFkZXJ9XCI+JHtjfTwvdGg+YDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBib29tdGFibGVfb3V0cHV0X2JvZHlfaGVhZGVyc19vdXRwdXQgKz0gXCI8L3RyPlwiO1xyXG4gICAgfVxyXG4gICAgYm9vbXRhYmxlX291dHB1dF9ib2R5X2hlYWRlcnMuaHRtbChib29tdGFibGVfb3V0cHV0X2JvZHlfaGVhZGVyc19vdXRwdXQpO1xyXG4gICAgbGV0IGJvb210YWJsZV9vdXRwdXRfYm9keSA9IGVsZW0uZmluZChcIiNib29tdGFibGVfb3V0cHV0X2JvZHlcIik7XHJcbiAgICBsZXQgYm9vbXRhYmxlX291dHB1dF9ib2R5X291dHB1dCA9IGBgO1xyXG4gICAgXy5lYWNoKG91dHB1dCwgbyA9PiB7XHJcbiAgICAgICAgYm9vbXRhYmxlX291dHB1dF9ib2R5X291dHB1dCArPSBcIjx0cj5cIjtcclxuICAgICAgICBpZiAoaGlkZV9maXJzdF9jb2x1bW4gIT09IHRydWUpIHtcclxuICAgICAgICAgICAgYm9vbXRhYmxlX291dHB1dF9ib2R5X291dHB1dCArPSBgPHRkIHN0eWxlPVwicGFkZGluZzo0cHg7dGV4dC1hbGlnbjoke3RleHRfYWxpZ25fZmlyc3RfY29sdW1ufVwiPiR7by5yb3d9PC90ZD5gO1xyXG4gICAgICAgIH1cclxuICAgICAgICBfLmVhY2goby5jb2xzLCBjID0+IHtcclxuICAgICAgICAgICAgYm9vbXRhYmxlX291dHB1dF9ib2R5X291dHB1dCArPSBgPHRkXHJcbiAgICAgICAgICAgICAgICBzdHlsZT1cInBhZGRpbmc6NHB4O2JhY2tncm91bmQtY29sb3I6JHtjLmJnQ29sb3J9O3RleHQtYWxpZ246JHt0ZXh0X2FsaWduX3RhYmxlX2NlbGxzfTtjb2xvcjoke2MudGV4dENvbG9yfVwiXHJcbiAgICAgICAgICAgICAgICB0aXRsZT1cIiR7XCJSb3cgTmFtZSA6IFwiICsgdXRpbHMuZ2V0QWN0dWFsTmFtZVdpdGhvdXRUcmFuc2Zvcm1TaWduKGMuYWN0dWFsX3Jvd19uYW1lKSArIFwiXFxuQ29sIE5hbWUgOiBcIiArIHV0aWxzLmdldEFjdHVhbE5hbWVXaXRob3V0VHJhbnNmb3JtU2lnbihjLmFjdHVhbF9jb2xfbmFtZSkgKyBcIlxcblZhbHVlIDogXCIgKyBjLnZhbHVlfVwiXHJcbiAgICAgICAgICAgICAgPiR7Yy5kaXNwbGF5VmFsdWV9PC90ZD5gO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGJvb210YWJsZV9vdXRwdXRfYm9keV9vdXRwdXQgKz0gXCI8L3RyPlwiO1xyXG4gICAgfSk7XHJcbiAgICBib29tdGFibGVfb3V0cHV0X2JvZHkuaHRtbChib29tdGFibGVfb3V0cHV0X2JvZHlfb3V0cHV0KTtcclxufTtcclxubGV0IGJ1aWxkRGVidWdIVE1MID0gZnVuY3Rpb24oZWxlbTogYW55LCBkYXRhQ29tcHV0ZWQ6IGFueSk6IHZvaWQge1xyXG4gICAgbGV0IGRlYnVnX3RhYmxlX2hvbGRlciA9IGVsZW0uZmluZChcIiNib29tdGFibGVfZGVidWdfdGFibGVfaG9sZGVyXCIpO1xyXG4gICAgbGV0IGRlYnVnX291dHB1dCA9IGBcclxuICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZS1wYW5lbC10YWJsZVwiPlxyXG4gICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVwicGFkZGluZzo0cHg7dGV4dC1hbGlnbjpjZW50ZXJcIj5NZXRyaWM8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0aCBzdHlsZT1cInBhZGRpbmc6NHB4O3RleHQtYWxpZ246Y2VudGVyXCI+UGF0dGVybjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVwicGFkZGluZzo0cHg7dGV4dC1hbGlnbjpjZW50ZXJcIj5WYWx1ZTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVwicGFkZGluZzo0cHg7dGV4dC1hbGlnbjpjZW50ZXJcIj5Sb3cgTmFtZTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVwicGFkZGluZzo0cHg7dGV4dC1hbGlnbjpjZW50ZXJcIj5Db2wgTmFtZTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVwicGFkZGluZzo0cHg7dGV4dC1hbGlnbjpjZW50ZXJcIj5UaHJlc2hvbGRzPC90aD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keSBpZD1cImJvb210YWJsZV9vdXRwdXRfYm9keV9kZWJ1Z1wiPlxyXG4gICAgYDtcclxuICAgIF8uZWFjaChkYXRhQ29tcHV0ZWQsIGQgPT4ge1xyXG4gICAgICAgIGRlYnVnX291dHB1dCArPSBgXHJcbiAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6NHB4O1wiIHdpZHRoPVwiNDAlXCI+JHtkLmFsaWFzfTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6NHB4O1wiPiR7ZC5wYXR0ZXJuLnBhdHRlcm4gfHwgXCJEZWZhdWx0XCJ9PC90ZD5cclxuICAgICAgICAgICAgPHRkIHN0eWxlPVwicGFkZGluZzo0cHg7YmFja2dyb3VuZC1jb2xvcjoke2QuYmdDb2xvcn1cIj4ke2QuZGlzcGxheVZhbHVlfTwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6NHB4O1wiPiR7ZC5yb3dfbmFtZX08L3RkPlxyXG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOjRweDtcIj4ke2QuY29sX25hbWV9PC90ZD5cclxuICAgICAgICAgICAgPHRkIHN0eWxlPVwicGFkZGluZzo0cHg7XCI+JHtkLnRocmVzaG9sZHN9PC90ZD5cclxuICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICBgO1xyXG4gICAgfSk7XHJcbiAgICBkZWJ1Z19vdXRwdXQgKz0gYFxyXG4gICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgPC90YWJsZT5cclxuICAgIGA7XHJcbiAgICBkZWJ1Z190YWJsZV9ob2xkZXIuaHRtbChkZWJ1Z19vdXRwdXQpO1xyXG59O1xyXG5leHBvcnQge1xyXG4gICAgYnVpbGRIVE1MLFxyXG4gICAgYnVpbGREZWJ1Z0hUTUxcclxufTtcclxuIl19