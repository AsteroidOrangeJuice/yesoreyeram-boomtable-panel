System.register(["lodash"], function (exports_1, context_1) {
    "use strict";
    var lodash_1, getTooltipMessage, buildHTML, buildDebugHTML;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (lodash_1_1) {
                lodash_1 = lodash_1_1;
            }
        ],
        execute: function () {
            getTooltipMessage = function (template, row_name, col_name, value) {
                if (template === "_") {
                    return "";
                }
                var tooltip = template;
                tooltip = tooltip.replace(new RegExp("_row_name_", "g"), String(row_name));
                tooltip = tooltip.replace(new RegExp("_col_name_", "g"), String(col_name));
                tooltip = tooltip.replace(new RegExp("_value_", "g"), String(value));
                return tooltip;
            };
            exports_1("getTooltipMessage", getTooltipMessage);
            buildHTML = function (elem, hide_headers, hide_first_column, show_footers, text_align_table_header, cols_found, output, text_align_first_column, text_align_table_cells, default_title_for_rows) {
                var boomtable_output_body_headers = elem.find("#boomtable_output_body_headers");
                var boomtable_output_body_headers_output = "<br/>";
                if (hide_headers !== true) {
                    boomtable_output_body_headers_output += "<tr>";
                    if (hide_first_column !== true) {
                        boomtable_output_body_headers_output += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + default_title_for_rows + "</th>";
                    }
                    lodash_1.default.each(lodash_1.default.uniq(cols_found), function (c) {
                        boomtable_output_body_headers_output += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + c + "</th>";
                    });
                    boomtable_output_body_headers_output += "</tr>";
                }
                boomtable_output_body_headers.html(boomtable_output_body_headers_output);
                var boomtable_output_body = elem.find("#boomtable_output_body");
                var boomtable_output_body_output = "";
                lodash_1.default.each(output, function (o) {
                    boomtable_output_body_output += "<tr>";
                    if (hide_first_column !== true) {
                        boomtable_output_body_output += "<td style=\"padding:4px;text-align:" + text_align_first_column + "\">" + o.row + "</td>";
                    }
                    lodash_1.default.each(o.cols, function (c) {
                        boomtable_output_body_output += "<td\n                style=\"padding:4px;background-color:" + c.bgColor + ";text-align:" + text_align_table_cells + ";color:" + c.textColor + "\"\n              >\n                <div\n                data-toggle=\"tooltip\"\n                data-html=\"true\"\n                data-placement=\"left\"\n                title=\"" + c.tooltip + "\"\n                style=\"padding-left:10px\">\n                    " + c.displayValue + "\n                </div>\n              </td>";
                    });
                    boomtable_output_body_output += "</tr>";
                });
                boomtable_output_body.html(boomtable_output_body_output);
                var boomtable_output_body_footers = elem.find("#boomtable_output_body_footers");
                var boomtable_output_body_footers_output = "";
                if (show_footers === true) {
                    boomtable_output_body_footers_output += "<tr>";
                    if (hide_first_column !== true) {
                        boomtable_output_body_footers_output += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + default_title_for_rows + "</th>";
                    }
                    lodash_1.default.each(lodash_1.default.uniq(cols_found), function (c) {
                        boomtable_output_body_footers_output += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + c + "</th>";
                    });
                    boomtable_output_body_footers_output += "</tr>";
                }
                boomtable_output_body_footers.html(boomtable_output_body_footers_output);
                elem.find("[data-toggle='tooltip']").tooltip();
            };
            exports_1("buildHTML", buildHTML);
            buildDebugHTML = function (elem, dataComputed) {
                var debug_table_holder = elem.find("#boomtable_debug_table_holder");
                var debug_output = "\n        <table class=\"table-panel-table\">\n            <thead>\n                <tr>\n                    <th style=\"padding:4px;text-align:center\">Metric</th>\n                    <th style=\"padding:4px;text-align:center\">Pattern</th>\n                    <th style=\"padding:4px;text-align:center\">Value</th>\n                    <th style=\"padding:4px;text-align:center\">Row Name</th>\n                    <th style=\"padding:4px;text-align:center\">Col Name</th>\n                    <th style=\"padding:4px;text-align:center\">Thresholds</th>\n                </tr>\n            </thead>\n            <tbody id=\"boomtable_output_body_debug\">\n    ";
                lodash_1.default.each(dataComputed, function (d) {
                    debug_output += "\n          <tr>\n            <td style=\"padding:4px;\" width=\"40%\">" + d.alias + "</td>\n            <td style=\"padding:4px;\">" + (d.pattern.pattern || "Default") + "</td>\n            <td style=\"padding:4px;background-color:" + d.bgColor + "\">" + d.displayValue + "</td>\n            <td style=\"padding:4px;\">" + d.row_name + "</td>\n            <td style=\"padding:4px;\">" + d.col_name + "</td>\n            <td style=\"padding:4px;\">" + d.thresholds + "</td>\n          </tr>\n          ";
                });
                debug_output += "\n        </tbody>\n        </table>\n    ";
                debug_table_holder.html(debug_output);
            };
            exports_1("buildDebugHTML", buildDebugHTML);
        }
    };
});
//# sourceMappingURL=data:application/json;base64,