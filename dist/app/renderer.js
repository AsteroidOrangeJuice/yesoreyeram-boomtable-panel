System.register(["lodash", "./utils"], function (exports_1, context_1) {
    "use strict";
    var lodash_1, utils_1, buildOutputData, output, output_debug, getTooltipMessage;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (lodash_1_1) {
                lodash_1 = lodash_1_1;
            },
            function (utils_1_1) {
                utils_1 = utils_1_1;
            }
        ],
        execute: function () {
            buildOutputData = function (dataComputed, rows_found, cols_found, defaultPattern, options) {
                var no_match_text = options && options.no_match_text ? options.no_match_text : "N/A";
                var output = [];
                lodash_1.default.each(lodash_1.default.uniq(rows_found), function (row_name) {
                    var o = {};
                    o.row = row_name;
                    o.cols = [];
                    lodash_1.default.each(lodash_1.default.uniq(cols_found), function (col_name) {
                        var matched_value = (lodash_1.default.find(dataComputed, function (e) {
                            return e.row_name === row_name && e.col_name === col_name;
                        }));
                        var mycol = {};
                        mycol.name = col_name;
                        mycol.value = matched_value ? matched_value.value || NaN : NaN;
                        mycol.displayValue = matched_value ? matched_value.displayValue || matched_value.value || "N/A" : no_match_text || "N/A";
                        mycol.bgColor = matched_value && matched_value.bgColor ? matched_value.bgColor : "transparent";
                        mycol.textColor = matched_value && matched_value.textColor ? matched_value.textColor : "white";
                        var tooltipTemplate = matched_value && matched_value.tooltipTemplate ? matched_value.tooltipTemplate : defaultPattern.tooltipTemplate || "No matching series found for _row_name_ & _col_name_";
                        if (matched_value) {
                            mycol.tooltip = getTooltipMessage(matched_value.alias || matched_value.aliasEscaped || matched_value.label || matched_value.id || "-", tooltipTemplate, utils_1.getActualNameWithoutTransformSign(matched_value.actual_row_name || row_name), utils_1.getActualNameWithoutTransformSign(matched_value.actual_col_name || col_name), matched_value.valueFormatted || no_match_text);
                        }
                        else {
                            mycol.tooltip = getTooltipMessage("-", tooltipTemplate, utils_1.getActualNameWithoutTransformSign(row_name), utils_1.getActualNameWithoutTransformSign(col_name), "NaN" || no_match_text);
                        }
                        mycol.tooltip = mycol.tooltip;
                        o.cols.push(mycol);
                    });
                    output.push(o);
                });
                return output;
            };
            exports_1("buildOutputData", buildOutputData);
            output = function (output, cols_found, options) {
                var hide_headers = options.hide_headers;
                var hide_first_column = options.hide_first_column;
                var text_align_table_header = options.text_align_table_header;
                var default_title_for_rows = options.default_title_for_rows;
                var text_align_first_column = options.text_align_first_column;
                var text_align_table_cells = options.text_align_table_cells;
                var show_footers = options.show_footers;
                var header_and_footer = "<tr>";
                if (hide_first_column !== true) {
                    header_and_footer += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + default_title_for_rows + "</th>";
                }
                lodash_1.default.each(lodash_1.default.uniq(cols_found), function (c) {
                    header_and_footer += "<th style=\"padding:4px;text-align:" + text_align_table_header + "\">" + c + "</th>";
                });
                header_and_footer += "</tr>";
                var header = "<br/>" + (hide_headers !== true ? header_and_footer : "");
                var footer = show_footers === true ? header_and_footer : "";
                var body = "";
                lodash_1.default.each(output, function (o) {
                    body += "<tr>";
                    if (hide_first_column !== true) {
                        body += "<td style=\"padding:4px;text-align:" + text_align_first_column + "\">" + o.row + "</td>";
                    }
                    lodash_1.default.each(o.cols, function (c) {
                        body += "<td\n            style=\"padding:4px;background-color:" + c.bgColor + ";text-align:" + text_align_table_cells + ";color:" + c.textColor + "\"\n          >\n            <div\n            data-toggle=\"tooltip\"\n            data-html=\"true\"\n            data-placement=\"auto\"\n            title=\"" + c.tooltip + "\"\n            style=\"padding-left:10px\">\n                " + c.displayValue + "\n            </div>\n          </td>";
                    });
                    body += "</tr>";
                });
                return { header: header, body: body, footer: footer };
            };
            exports_1("buildOutput", output);
            output_debug = function (dataComputed) {
                var debug_output = "\n        <table class=\"table-panel-table\">\n            <thead>\n                <tr>\n                    <th style=\"padding:4px;text-align:center\">Metric</th>\n                    <th style=\"padding:4px;text-align:center\">Pattern</th>\n                    <th style=\"padding:4px;text-align:center\">Value</th>\n                    <th style=\"padding:4px;text-align:center\">Row Name</th>\n                    <th style=\"padding:4px;text-align:center\">Col Name</th>\n                    <th style=\"padding:4px;text-align:center\">Thresholds</th>\n                </tr>\n            </thead>\n            <tbody id=\"boomtable_output_body_debug\">\n    ";
                lodash_1.default.each(dataComputed, function (d) {
                    debug_output += "\n          <tr>\n            <td style=\"padding:4px;\" width=\"40%\">" + d.alias + "</td>\n            <td style=\"padding:4px;\">" + (d.pattern.pattern || "Default") + "</td>\n            <td style=\"padding:4px;background-color:" + d.bgColor + "\">" + d.displayValue + "</td>\n            <td style=\"padding:4px;\">" + d.row_name + "</td>\n            <td style=\"padding:4px;\">" + d.col_name + "</td>\n            <td style=\"padding:4px;\">" + d.thresholds + "</td>\n          </tr>\n          ";
                });
                debug_output += "\n        </tbody>\n        </table>\n    ";
                return debug_output;
            };
            exports_1("buildDebugOutput", output_debug);
            getTooltipMessage = function (seriesIdentifier, template, row_name, col_name, value) {
                if (template === "_") {
                    return "";
                }
                var tooltip = template;
                tooltip = tooltip.replace(new RegExp("_series_", "g"), String(seriesIdentifier));
                tooltip = tooltip.replace(new RegExp("_row_name_", "g"), String(row_name));
                tooltip = tooltip.replace(new RegExp("_col_name_", "g"), String(col_name));
                tooltip = tooltip.replace(new RegExp("_value_", "g"), String(value));
                return tooltip;
            };
            exports_1("getTooltipMessage", getTooltipMessage);
        }
    };
});
//# sourceMappingURL=data:application/json;base64,