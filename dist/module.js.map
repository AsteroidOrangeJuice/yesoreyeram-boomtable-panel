{"version":3,"sources":["../src/module.js"],"names":["kbn","loadPluginCss","MetricsPanelCtrl","TimeSeries","utils","config","_","list_of_stylesheets","GrafanaBoomTableCtrl","$scope","$injector","$sce","defaults","panel","panelDefaults","events","on","onDataReceived","bind","onInitEditMode","unitFormats","getUnitFormats","valueNameOptions","each","editorTabs","addEditorTab","editor","name","plugin_id","template","position","data","dataReceived","render","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","newPattern","pattern","delimiter","valueName","row_name","col_name","thresholds","enable_bgColor","bgColors","enable_transform","transform_values","decimals","format","null_color","null_value","patterns","push","activePatternIndex","length","index","splice","value","c","dropRight","i","normalizeColor","first","t","replace","RegExp","_decimals","isNumber","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","subItem","defaultPattern","prototype","console","dataComputed","metricsReceived","getFields","uniq","duplicateKeys","filter","v","err","Error","message","join","error","undefined","map","seriesHandler","find","concat","p","match","stats","NaN","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","isNaN","valueFormatted","valueRounded","roundValue","displayValue","split","reduce","r","it","key_name","d","bgColor","computeBgColor","transformValue","rows_found","cols_found","keys_found","is_unique_keys","output","o","row","cols","matched_value","e","groupedData","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import {\r\n  kbn,\r\n  loadPluginCss,\r\n  MetricsPanelCtrl,\r\n  TimeSeries,\r\n  utils,\r\n  config\r\n} from \"./app/app\"\r\nimport _ from \"lodash\";\r\nloadPluginCss(config.list_of_stylesheets);\r\n\r\nclass GrafanaBoomTableCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, config.panelDefaults);\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n  }\r\n  onInitEditMode() {\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.valueNameOptions = config.valueNameOptions;\r\n    _.each(config.editorTabs, editor => {\r\n      this.addEditorTab(editor.name, \"public/plugins/\" + config.plugin_id + editor.template, editor.position);\r\n    })\r\n  }\r\n  onDataReceived(data) {\r\n    this.dataReceived = data;\r\n    this.render();\r\n  }\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n  addPattern() {\r\n    var newPattern = {\r\n      pattern: \"^server.*cpu$\",\r\n      delimiter: \".\",\r\n      valueName: \"avg\",\r\n      row_name: \"_0_\",\r\n      col_name: \"_1_\",\r\n      thresholds: \"70,90\",\r\n      enable_bgColor: false,\r\n      bgColors: \"green|orange|red\",\r\n      enable_transform: false,\r\n      transform_values: \"_value_|_value_|_value_\",\r\n      decimals: 2,\r\n      format: \"none\",\r\n      null_color: \"darkred\",\r\n      null_value: \"No data\"\r\n    };\r\n    this.panel.patterns.push(newPattern);\r\n    this.panel.activePatternIndex = this.panel.patterns.length - 1;\r\n    this.render();\r\n  }\r\n  removePattern(index) {\r\n    this.panel.patterns.splice(index, 1);\r\n    this.panel.activePatternIndex = -1;\r\n    this.render();\r\n  }\r\n  computeBgColor(thresholds, bgColors, value) {\r\n    var c = \"transparent\";\r\n    if (thresholds && bgColors && value && thresholds.length + 1 <= bgColors.length) {\r\n      bgColors = _.dropRight(bgColors, bgColors.length - thresholds.length - 1);\r\n      if (bgColors[bgColors.length - 1] === \"\") {\r\n        bgColors[bgColors.length - 1] = \"transparent\";\r\n      }\r\n      for (var i = thresholds.length; i > 0; i--) {\r\n        if (value >= thresholds[i - 1]) {\r\n          return utils.normalizeColor(bgColors[i]);\r\n        }\r\n      }\r\n      return utils.normalizeColor(_.first(bgColors));\r\n    }\r\n    return c;\r\n  }\r\n  transformValue(thresholds, transform_values, value) {\r\n    var t = value;\r\n    if (thresholds && transform_values && value && thresholds.length + 1 <= transform_values.length) {\r\n      transform_values = _.dropRight(transform_values, transform_values.length - thresholds.length - 1);\r\n      if (transform_values[transform_values.length - 1] === \"\") {\r\n        transform_values[transform_values.length - 1] = \"_value_\";\r\n      }\r\n      for (var i = thresholds.length; i > 0; i--) {\r\n        if (value >= thresholds[i - 1]) {\r\n          return transform_values[i].replace(new RegExp(\"_value_\", \"g\"), value);\r\n        }\r\n      }\r\n      return _.first(transform_values).replace(new RegExp(\"_value_\", \"g\"), value);\r\n    }\r\n    return t;\r\n  }\r\n  getDecimalsForValue(value, _decimals) {\r\n    if (_.isNumber(+_decimals)) {\r\n      return {\r\n        decimals: _decimals,\r\n        scaledDecimals: null\r\n      };\r\n    }\r\n\r\n    var delta = value / 2;\r\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n    var magn = Math.pow(10, -dec),\r\n      norm = delta / magn, // norm is between 1.0 and 10.0\r\n      size;\r\n\r\n    if (norm < 1.5) {\r\n      size = 1;\r\n    } else if (norm < 3) {\r\n      size = 2;\r\n      // special case for 2.5, requires an extra decimal\r\n      if (norm > 2.25) {\r\n        size = 2.5;\r\n        ++dec;\r\n      }\r\n    } else if (norm < 7.5) {\r\n      size = 5;\r\n    } else {\r\n      size = 10;\r\n    }\r\n\r\n    size *= magn;\r\n\r\n    // reduce starting decimals if not needed\r\n    if (Math.floor(value) === value) {\r\n      dec = 0;\r\n    }\r\n\r\n    var result = {};\r\n    result.decimals = Math.max(0, dec);\r\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n    return result;\r\n  }\r\n  setUnitFormat(subItem, index) {\r\n    if (index === -1) {\r\n      this.panel.defaultPattern.format = subItem.value;\r\n    } else {\r\n      this.panel.patterns[index].format = subItem.value;\r\n    }\r\n    this.render();\r\n  }\r\n}\r\n\r\nGrafanaBoomTableCtrl.prototype.render = function () {\r\n  if (this.dataReceived) {\r\n    console.log(\"Rendering\");\r\n    // Copying the data received\r\n    this.dataComputed = this.dataReceived;\r\n    const metricsReceived = utils.getFields(this.dataComputed, \"target\");\r\n    if (metricsReceived.length !== _.uniq(metricsReceived).length) {\r\n      var duplicateKeys = _.uniq(metricsReceived.filter(v => {\r\n        return metricsReceived.filter(t => t === v).length > 1\r\n      }));\r\n      var err = new Error();\r\n      err.name = \"Duplicate data received\";\r\n      err.message = \"Duplicate keys : <br/>\" + duplicateKeys.join(\"<br/> \");\r\n      this.panel.error = err;\r\n      this.panel.data = undefined;\r\n    } else {\r\n      this.panel.error = undefined;\r\n      // Binding the grafana computations to the metrics received\r\n      this.dataComputed = this.dataReceived.map(this.seriesHandler.bind(this));\r\n      // Assign pattern\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.pattern = _.find(this.panel.patterns.concat(this.panel.defaultPattern), function (p) {\r\n          return series.alias.match(p.pattern || \"\");\r\n        });\r\n        return series;\r\n      });\r\n      // Assign Decimal Values\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.decimals = (series.pattern.decimals) || config.panelDefaults.defaultPattern.decimals;\r\n        return series;\r\n      });\r\n      // Assign value\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        if (series.stats) {\r\n          series.value = series.stats[series.pattern.valueName || config.panelDefaults.defaultPattern.valueName] || NaN;\r\n          let decimalInfo = this.getDecimalsForValue(series.value, series.decimals);\r\n          let formatFunc = kbn.valueFormats[series.pattern.format || config.panelDefaults.defaultPattern.format];\r\n          if (!isNaN(series.value)) {\r\n            series.valueFormatted = formatFunc(series.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n            series.valueRounded = kbn.roundValue(series.value, decimalInfo.decimals);\r\n            series.displayValue = series.valueFormatted;\r\n          } else {\r\n            series.valueFormatted = formatFunc(0, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n            series.valueRounded = kbn.roundValue(0, decimalInfo.decimals);\r\n            series.displayValue = series.pattern.null_value || \"Null\";\r\n          }\r\n        }\r\n        return series;\r\n      });\r\n      // Assign Row Name\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.row_name = series.alias.split(series.pattern.delimiter || \".\").reduce((r, it, i) => {\r\n          return r.replace(new RegExp(\"_\" + i + \"_\", \"g\"), it)\r\n        }, series.pattern.row_name || config.panelDefaults.defaultPattern.row_name);\r\n        if (series.alias.split(series.pattern.delimiter || \".\").length === 1) {\r\n          series.row_name = series.alias;\r\n        }\r\n        return series;\r\n      });\r\n      // Assign Col Name\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.col_name = series.alias.split(series.pattern.delimiter || \".\").reduce((r, it, i) => {\r\n          return r.replace(new RegExp(\"_\" + i + \"_\", \"g\"), it)\r\n        }, series.pattern.col_name || config.panelDefaults.defaultPattern.col_name);\r\n        if (series.alias.split(series.pattern.delimiter || \".\").length === 1) {\r\n          series.col_name = \"value\";\r\n        }\r\n        return series;\r\n      });\r\n      // Assign RowCol Key\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.key_name = series.row_name + \"#\" + series.col_name;\r\n        return series;\r\n      });\r\n      // Assign Thresholds\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.thresholds = (series.pattern.thresholds || config.panelDefaults.defaultPattern.thresholds).split(\",\").map(d => +d);\r\n        return series;\r\n      });\r\n      // Assign BG Colors\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.enable_bgColor = series.pattern.enable_bgColor;\r\n        series.bgColors = (series.pattern.bgColors || config.panelDefaults.defaultPattern.bgColors).split(\"|\");\r\n        series.bgColor = series.enable_bgColor === true ? this.computeBgColor(series.thresholds, series.bgColors, series.value) : \"transparent\";\r\n        if (series.displayValue === (series.pattern.null_value || \"Null\")) {\r\n          series.bgColor = series.pattern.null_color || config.panelDefaults.defaultPattern.null_color;\r\n        }\r\n        return series;\r\n      });\r\n      // Value Transform\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.enable_transform = series.pattern.enable_transform;\r\n        series.transform_values = (series.pattern.transform_values || config.panelDefaults.defaultPattern.transform_values).split(\"|\");\r\n        series.displayValue = series.enable_transform === true ? this.transformValue(series.thresholds, series.transform_values, series.displayValue) : series.displayValue;\r\n        return series;\r\n      });\r\n      // Grouping\r\n      const rows_found = utils.getFields(this.dataComputed, \"row_name\");\r\n      const cols_found = utils.getFields(this.dataComputed, \"col_name\");\r\n      const keys_found = utils.getFields(this.dataComputed, \"key_name\");\r\n      const is_unique_keys = (keys_found.length === _.uniq(keys_found).length);\r\n      if (is_unique_keys) {\r\n        this.panel.error = undefined;\r\n        var output = [];\r\n        _.each(_.uniq(rows_found), (row_name) => {\r\n          var o = {};\r\n          o.row = row_name;\r\n          o.cols = [];\r\n          _.each(_.uniq(cols_found), (col_name) => {\r\n            var matched_value = (_.find(this.dataComputed, (e) => {\r\n              return e.row_name === row_name && e.col_name === col_name\r\n            }));\r\n            if (!matched_value) matched_value = {\r\n              value: NaN,\r\n              displayValue: \"N/A\"\r\n            };\r\n            o.cols.push({\r\n              \"name\": col_name,\r\n              \"value\": matched_value.value,\r\n              \"displayValue\": matched_value.displayValue || matched_value.value,\r\n              \"bgColor\": matched_value.bgColor || \"transparent\"\r\n            });\r\n          });\r\n          output.push(o);\r\n        })\r\n        this.panel.cols = _.uniq(cols_found);\r\n        this.panel.groupedData = output;\r\n        // Group Data\r\n      } else {\r\n        var duplicateKeys = _.uniq(keys_found.filter(v => {\r\n          return keys_found.filter(t => t === v).length > 1\r\n        }));\r\n        var err = new Error();\r\n        err.name = \"Duplicate keys found\";\r\n        err.message = \"Duplicate key values : <br/>\" + duplicateKeys.join(\"<br/> \");\r\n        this.panel.error = err;\r\n      }\r\n\r\n      // Assigning computed data to output panel\r\n      this.panel.data = this.dataComputed;\r\n    }\r\n  }\r\n};\r\n\r\nGrafanaBoomTableCtrl.templateUrl = \"partials/module.html\";\r\n\r\nexport {\r\n  GrafanaBoomTableCtrl as PanelCtrl\r\n};"]}