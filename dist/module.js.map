{"version":3,"sources":["../src/module.js"],"names":["loadPluginCss","MetricsPanelCtrl","TimeSeries","utils","config","_","list_of_stylesheets","GrafanaBoomTableCtrl","$scope","$injector","$sce","defaults","panel","panelDefaults","events","on","onDataReceived","bind","onInitEditMode","valueNameOptions","each","editorTabs","addEditorTab","editor","name","plugin_id","template","position","data","dataReceived","render","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","newPattern","pattern","delimiter","valueName","row_name","col_name","thresholds","enable_bgColor","bgColors","enable_transform","transform_values","patterns","push","activePatternIndex","length","index","splice","value","c","dropRight","i","normalizeColor","first","t","replace","RegExp","prototype","console","log","dataComputed","metricsReceived","getFields","uniq","duplicateKeys","filter","v","err","Error","message","join","error","undefined","map","seriesHandler","find","concat","defaultPattern","p","match","stats","displayValue","split","reduce","r","it","key_name","d","bgColor","computeBgColor","transformValue","rows_found","cols_found","keys_found","is_unique_keys","output","o","row","cols","matched_value","e","NaN","groupedData","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import {\r\n  loadPluginCss,\r\n  MetricsPanelCtrl,\r\n  TimeSeries,\r\n  utils,\r\n  config\r\n} from \"./app/app\"\r\nimport _ from \"lodash\";\r\nloadPluginCss(config.list_of_stylesheets);\r\n\r\nclass GrafanaBoomTableCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, config.panelDefaults);\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n  }\r\n  onInitEditMode() {\r\n    this.valueNameOptions = config.valueNameOptions;\r\n    _.each(config.editorTabs, editor => {\r\n      this.addEditorTab(editor.name, \"public/plugins/\" + config.plugin_id + editor.template, editor.position);\r\n    })\r\n  }\r\n  onDataReceived(data) {\r\n    this.dataReceived = data;\r\n    this.render();\r\n  }\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n  addPattern() {\r\n    var newPattern = {\r\n      pattern: \"^server.*cpu$\",\r\n      delimiter: \".\",\r\n      valueName: \"avg\",\r\n      row_name: \"_0_\",\r\n      col_name: \"_1_\",\r\n      thresholds: \"70,90\",\r\n      enable_bgColor: false,\r\n      bgColors: \"green|orange|red\",\r\n      enable_transform: false,\r\n      transform_values: \"_value_|_value_|_value_\"\r\n    };\r\n    this.panel.patterns.push(newPattern);\r\n    this.panel.activePatternIndex = this.panel.patterns.length - 1;\r\n    this.render();\r\n  }\r\n  removePattern(index) {\r\n    this.panel.patterns.splice(index, 1);\r\n    this.panel.activePatternIndex = -1;\r\n    this.render();\r\n  }\r\n  computeBgColor(thresholds, bgColors, value) {\r\n    var c = \"transparent\";\r\n    if (thresholds && bgColors && value && thresholds.length + 1 <= bgColors.length) {\r\n      bgColors = _.dropRight(bgColors, bgColors.length - thresholds.length - 1);\r\n      if (bgColors[bgColors.length - 1] === \"\") {\r\n        bgColors[bgColors.length - 1] = \"transparent\";\r\n      }\r\n      for (var i = thresholds.length; i > 0; i--) {\r\n        if (value >= thresholds[i - 1]) {\r\n          return utils.normalizeColor(bgColors[i]);\r\n        }\r\n      }\r\n      return utils.normalizeColor(_.first(bgColors));\r\n    }\r\n    return c;\r\n  }\r\n  transformValue(thresholds, transform_values, value) {\r\n    var t = value;\r\n    if (thresholds && transform_values && value && thresholds.length + 1 <= transform_values.length) {\r\n      transform_values = _.dropRight(transform_values, transform_values.length - thresholds.length - 1);\r\n      if (transform_values[transform_values.length - 1] === \"\") {\r\n        transform_values[transform_values.length - 1] = \"_value_\";\r\n      }\r\n      for (var i = thresholds.length; i > 0; i--) {\r\n        if (value >= thresholds[i - 1]) {\r\n          return transform_values[i].replace(new RegExp(\"_value_\", \"g\"), value);\r\n        }\r\n      }\r\n      return _.first(transform_values).replace(new RegExp(\"_value_\", \"g\"), value);\r\n    }\r\n    return t;\r\n  }\r\n}\r\n\r\nGrafanaBoomTableCtrl.prototype.render = function () {\r\n  if (this.dataReceived) {\r\n    console.log(\"Rendering\");\r\n    // Copying the data received\r\n    this.dataComputed = this.dataReceived;\r\n    const metricsReceived = utils.getFields(this.dataComputed, \"target\");\r\n    if (metricsReceived.length !== _.uniq(metricsReceived).length) {\r\n      var duplicateKeys = _.uniq(metricsReceived.filter(v => {\r\n        return metricsReceived.filter(t => t === v).length > 1\r\n      }));\r\n      var err = new Error();\r\n      err.name = \"Duplicate data received\";\r\n      err.message = \"Check console for more details. <br/> Duplicate keys : <br/>\" + duplicateKeys.join(\"<br/> \");\r\n      console.log(err, duplicateKeys);\r\n      this.panel.error = err;\r\n      this.panel.data = undefined;\r\n    } else {\r\n      this.panel.error = undefined;\r\n      // Binding the grafana computations to the metrics received\r\n      this.dataComputed = this.dataReceived.map(this.seriesHandler.bind(this));\r\n      // Assign pattern\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.pattern = _.find(this.panel.patterns.concat(this.panel.defaultPattern), function (p) {\r\n          return series.alias.match(p.pattern || \"\");\r\n        });\r\n        return series;\r\n      });\r\n      // Assign value\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.value = series.stats[series.pattern.valueName || \"avg\"] || \"N/A\";\r\n        series.displayValue = series.value;\r\n        return series;\r\n      });\r\n      // Assign Row Name\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.row_name = series.alias.split(series.pattern.delimiter || \".\").reduce((r, it, i) => {\r\n          return r.replace(new RegExp(\"_\" + i + \"_\", \"g\"), it)\r\n        }, series.pattern.row_name || config.panelDefaults.defaultPattern.row_name);\r\n        if (series.alias.split(series.pattern.delimiter || \".\").length === 1) {\r\n          series.row_name = series.alias;\r\n        }\r\n        return series;\r\n      });\r\n      // Assign Col Name\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.col_name = series.alias.split(series.pattern.delimiter || \".\").reduce((r, it, i) => {\r\n          return r.replace(new RegExp(\"_\" + i + \"_\", \"g\"), it)\r\n        }, series.pattern.col_name || config.panelDefaults.defaultPattern.col_name);\r\n        if (series.alias.split(series.pattern.delimiter || \".\").length === 1) {\r\n          series.col_name = \"value\";\r\n        }\r\n        return series;\r\n      });\r\n      // Assign RowCol Key\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.key_name = series.row_name + \"#\" + series.col_name;\r\n        return series;\r\n      });\r\n      // Assign Thresholds\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.thresholds = (series.pattern.thresholds || config.panelDefaults.defaultPattern.thresholds).split(\",\").map(d => +d);\r\n        return series;\r\n      });\r\n      // Assign BG Colors\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.enable_bgColor = series.pattern.enable_bgColor;\r\n        series.bgColors = (series.pattern.bgColors || config.panelDefaults.defaultPattern.bgColors).split(\"|\");\r\n        series.bgColor = series.enable_bgColor === true ? this.computeBgColor(series.thresholds, series.bgColors, series.value) : \"transparent\";\r\n        return series;\r\n      });\r\n      // Value Transform\r\n      this.dataComputed = this.dataComputed.map(series => {\r\n        series.enable_transform = series.pattern.enable_transform;\r\n        series.transform_values = (series.pattern.transform_values || config.panelDefaults.defaultPattern.transform_values).split(\"|\");\r\n        series.displayValue = series.enable_transform === true ? this.transformValue(series.thresholds, series.transform_values, series.value) : series.displayValue;\r\n        return series;\r\n      });\r\n      // Grouping\r\n      const rows_found = utils.getFields(this.dataComputed, \"row_name\");\r\n      const cols_found = utils.getFields(this.dataComputed, \"col_name\");\r\n      const keys_found = utils.getFields(this.dataComputed, \"key_name\");\r\n      const is_unique_keys = (keys_found.length === _.uniq(keys_found).length);\r\n      if (is_unique_keys) {\r\n        this.panel.error = undefined;\r\n        var output = [];\r\n        _.each(_.uniq(rows_found), (row_name) => {\r\n          var o = {};\r\n          o.row = row_name;\r\n          o.cols = [];\r\n          _.each(_.uniq(cols_found), (col_name) => {\r\n            var matched_value = (_.find(this.dataComputed, (e) => {\r\n              return e.row_name === row_name && e.col_name === col_name\r\n            }));\r\n            if (!matched_value) matched_value = {\r\n              value: NaN,\r\n              displayValue: \"N/A\"\r\n            };\r\n            o.cols.push({\r\n              \"name\": col_name,\r\n              \"value\": matched_value.value,\r\n              \"displayValue\": matched_value.displayValue || matched_value.value,\r\n              \"bgColor\": matched_value.bgColor || \"transparent\"\r\n            });\r\n          });\r\n          output.push(o);\r\n        })\r\n        this.panel.cols = _.uniq(cols_found);\r\n        this.panel.groupedData = output;\r\n        // Group Data\r\n      } else {\r\n        var duplicateKeys = _.uniq(keys_found.filter(v => {\r\n          return keys_found.filter(t => t === v).length > 1\r\n        }));\r\n        var err = new Error();\r\n        err.name = \"Duplicate keys found\";\r\n        err.message = \"Check console for more details\";\r\n        err.message = \"Check console for more details. <br/> Duplicate key values : <br/>\" + duplicateKeys.join(\"<br/> \");\r\n        console.log(err, duplicateKeys);\r\n        this.panel.error = err;\r\n      }\r\n\r\n      // Assigning computed data to output panel\r\n      this.panel.data = this.dataComputed;\r\n    }\r\n  }\r\n};\r\n\r\nGrafanaBoomTableCtrl.templateUrl = \"partials/module.html\";\r\n\r\nexport {\r\n  GrafanaBoomTableCtrl as PanelCtrl\r\n};"]}