{"version":3,"sources":["../src/module.js"],"names":["loadPluginCss","MetricsPanelCtrl","TimeSeries","config","list_of_stylesheets","GrafanaBoomTableCtrl","$scope","$injector","$sce","_","defaults","panel","panelDefaults","events","on","onDataReceived","bind","onInitEditMode","each","editorTabs","addEditorTab","editor","name","plugin_id","template","position","data","dataReceived","render","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","newPattern","pattern","delimiter","patterns","push","activePatternIndex","length","index","splice","prototype","console","log","dataComputed","map","seriesHandler","find","concat","defaultPattern","p","match","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,mB,WAAAA,a;AACAC,sB,WAAAA,gB;AACAC,gB,WAAAA,U;AACAC,Y,WAAAA,M;;;;;;;;;;;;;;;;;;;;;AAGFH,oBAAcG,OAAOC,mBAArB;;2BAEMC,oB;;;AACJ,sCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqC;AAAA;;AAAA,kJAC7BF,MAD6B,EACrBC,SADqB;;AAEnCE,YAAEC,QAAF,CAAW,MAAKC,KAAhB,EAAuBR,OAAOS,aAA9B;AACA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,cAAL,CAAoBD,IAApB,OAAjC;AAJmC;AAKpC;;;;2CACgB;AAAA;;AACfP,cAAES,IAAF,CAAOf,OAAOgB,UAAd,EAA0B,kBAAU;AAClC,qBAAKC,YAAL,CAAkBC,OAAOC,IAAzB,EAA+B,oBAAoBnB,OAAOoB,SAA3B,GAAuCF,OAAOG,QAA7E,EAAuFH,OAAOI,QAA9F;AACD,aAFD;AAGD;;;yCACcC,I,EAAM;AACnB,iBAAKC,YAAL,GAAoBD,IAApB;AACA,iBAAKE,MAAL;AACD;;;wCACaC,U,EAAY;AACxB,gBAAIC,SAAS,IAAI5B,UAAJ,CAAe;AAC1B6B,0BAAYF,WAAWE,UAAX,IAAyB,EADX;AAE1BC,qBAAOH,WAAWI;AAFQ,aAAf,CAAb;AAIAH,mBAAOI,SAAP,GAAmBJ,OAAOK,YAAP,CAAoB,KAAKxB,KAAL,CAAWyB,aAA/B,CAAnB;AACA,mBAAON,MAAP;AACD;;;uCACY;AACX,gBAAIO,aAAa;AACfC,uBAAS,eADM;AAEfC,yBAAW;AAFI,aAAjB;AAIA,iBAAK5B,KAAL,CAAW6B,QAAX,CAAoBC,IAApB,CAAyBJ,UAAzB;AACA,iBAAK1B,KAAL,CAAW+B,kBAAX,GAAgC,KAAK/B,KAAL,CAAW6B,QAAX,CAAoBG,MAApB,GAA6B,CAA7D;AACA,iBAAKf,MAAL;AACD;;;wCACagB,K,EAAO;AACnB,iBAAKjC,KAAL,CAAW6B,QAAX,CAAoBK,MAApB,CAA2BD,KAA3B,EAAkC,CAAlC;AACA,iBAAKjC,KAAL,CAAW+B,kBAAX,GAAgC,CAAC,CAAjC;AACD;;;;QApCgCzC,gB;;AAuCnCI,2BAAqByC,SAArB,CAA+BlB,MAA/B,GAAwC,YAAY;AAAA;;AAClD,YAAI,KAAKD,YAAT,EAAuB;AACrBoB,kBAAQC,GAAR,CAAY,WAAZ;AACA;AACA,eAAKC,YAAL,GAAoB,KAAKtB,YAAL,CAAkBuB,GAAlB,CAAsB,KAAKC,aAAL,CAAmBnC,IAAnB,CAAwB,IAAxB,CAAtB,CAApB;AACA;AACA,eAAKiC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,GAAlB,CAAsB,kBAAU;AAClDpB,mBAAOQ,OAAP,GAAiB7B,EAAE2C,IAAF,CAAO,OAAKzC,KAAL,CAAW6B,QAAX,CAAoBa,MAApB,CAA2B,OAAK1C,KAAL,CAAW2C,cAAtC,CAAP,EAA8D,UAAUC,CAAV,EAAa;AAC1F,qBAAOzB,OAAOE,KAAP,CAAawB,KAAb,CAAmBD,EAAEjB,OAAF,IAAa,EAAhC,CAAP;AACD,aAFgB,CAAjB;AAGA,mBAAOR,MAAP;AACD,WALmB,CAApB;AAMA;AACA,eAAKnB,KAAL,CAAWe,IAAX,GAAkB,KAAKuB,YAAvB;AACD;AACF,OAfD;;AAiBA5C,2BAAqBoD,WAArB,GAAmC,sBAAnC;;2BAGEpD,oB","file":"module.js","sourcesContent":["import {\r\n  loadPluginCss,\r\n  MetricsPanelCtrl,\r\n  TimeSeries,\r\n  config\r\n} from \"./app/app\"\r\n\r\nloadPluginCss(config.list_of_stylesheets);\r\n\r\nclass GrafanaBoomTableCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, config.panelDefaults);\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n  }\r\n  onInitEditMode() {\r\n    _.each(config.editorTabs, editor => {\r\n      this.addEditorTab(editor.name, \"public/plugins/\" + config.plugin_id + editor.template, editor.position);\r\n    })\r\n  }\r\n  onDataReceived(data) {\r\n    this.dataReceived = data;\r\n    this.render();\r\n  }\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n  addPattern() {\r\n    var newPattern = {\r\n      pattern: \"^server.*cpu$\",\r\n      delimiter: \".\"\r\n    };\r\n    this.panel.patterns.push(newPattern);\r\n    this.panel.activePatternIndex = this.panel.patterns.length - 1;\r\n    this.render();\r\n  }\r\n  removePattern(index) {\r\n    this.panel.patterns.splice(index, 1);\r\n    this.panel.activePatternIndex = -1;\r\n  }\r\n}\r\n\r\nGrafanaBoomTableCtrl.prototype.render = function () {\r\n  if (this.dataReceived) {\r\n    console.log(\"Rendering\");\r\n    // Binding the grafana computations to the metrics received\r\n    this.dataComputed = this.dataReceived.map(this.seriesHandler.bind(this));\r\n    // Assign pattern\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.pattern = _.find(this.panel.patterns.concat(this.panel.defaultPattern), function (p) {\r\n        return series.alias.match(p.pattern || \"\");\r\n      });\r\n      return series;\r\n    })\r\n    // Assigning computed data to output panel\r\n    this.panel.data = this.dataComputed;\r\n  }\r\n};\r\n\r\nGrafanaBoomTableCtrl.templateUrl = \"partials/module.html\";\r\n\r\nexport {\r\n  GrafanaBoomTableCtrl as PanelCtrl\r\n};"]}