{"version":3,"sources":["../src/module.js"],"names":["kbn","loadPluginCss","MetricsPanelCtrl","TimeSeries","config","dark","plugin_id","light","panelDefaults","plugin_title","title","nullPointMode","GrafanaBoomTableCtrl","$scope","$injector","$sce","_","defaults","panel","events","on","onDataReceived","bind","onInitEditMode","console","log","data","dataComputed","map","seriesHandler","render","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","prototype","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,S;;AACEC,mB,kBAAAA,a;AAAeC,sB,kBAAAA,gB;;AACjBC,gB;;AACEC,Y,cAAAA,M;;;;;;;;;;;;;;;;;;;;;AAETH,oBAAc;AACZI,cAAM,aAAaD,OAAOE,SAApB,GAAgC,uBAD1B;AAEZC,eAAO,aAAaH,OAAOE,SAApB,GAAgC;AAF3B,OAAd;;AAKME,mB,GAAgB;AACpBC,sBAAcL,OAAOM,KADD;AAEpBC,uBAAe;AAFK,O;;2BAKhBC,oB;;;AACJ,sCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqC;AAAA;;AAAA,kJAC7BF,MAD6B,EACrBC,SADqB;;AAEnCE,YAAEC,QAAF,CAAW,MAAKC,KAAhB,EAAuBV,aAAvB;AACA,gBAAKW,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,cAAL,CAAoBD,IAApB,OAAjC;AAJmC;AAKpC;;;;2CACgB;AACfE,oBAAQC,GAAR,CAAY,qBAAZ;AACD;;;yCACcC,I,EAAM;AACnBF,oBAAQC,GAAR,CAAY,eAAZ;AACA,iBAAKE,YAAL,GAAoBD,KAAKE,GAAL,CAAS,KAAKC,aAAL,CAAmBP,IAAnB,CAAwB,IAAxB,CAAT,CAApB;AACA,iBAAKQ,MAAL;AACD;;;wCACaC,U,EAAY;AACxB,gBAAIC,SAAS,IAAI7B,UAAJ,CAAe;AAC1B8B,0BAAYF,WAAWE,UAAX,IAAyB,EADX;AAE1BC,qBAAOH,WAAWI;AAFQ,aAAf,CAAb;AAIAH,mBAAOI,SAAP,GAAmBJ,OAAOK,YAAP,CAAoB,KAAKnB,KAAL,CAAWP,aAA/B,CAAnB;AACA,mBAAOqB,MAAP;AACD;;;;QAtBgC9B,gB;;AAyBnCU,2BAAqB0B,SAArB,CAA+BR,MAA/B,GAAwC,YAAW;AACjDN,gBAAQC,GAAR,CAAY,WAAZ;AACA,aAAKP,KAAL,CAAWQ,IAAX,GAAkB,KAAKC,YAAvB;AACD,OAHD;;AAKAf,2BAAqB2B,WAArB,GAAmC,aAAnC;;2BAES3B,oB","file":"module.js","sourcesContent":["import kbn from \"app/core/utils/kbn\";\r\nimport { loadPluginCss, MetricsPanelCtrl } from \"app/plugins/sdk\";\r\nimport TimeSeries from \"app/core/time_series2\";\r\nimport { config } from \"./app/config\";\r\n\r\nloadPluginCss({\r\n  dark: \"plugins/\" + config.plugin_id + \"/css/default.dark.css\",\r\n  light: \"plugins/\" + config.plugin_id + \"/css/default.light.css\"\r\n});\r\n\r\nconst panelDefaults = {\r\n  plugin_title: config.title,\r\n  nullPointMode: \"connected\"\r\n};\r\n\r\nclass GrafanaBoomTableCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, panelDefaults);\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n  }\r\n  onInitEditMode() {\r\n    console.log(\"Edit mode activated\");\r\n  }\r\n  onDataReceived(data) {\r\n    console.log(\"Data received\");\r\n    this.dataComputed = data.map(this.seriesHandler.bind(this));\r\n    this.render();\r\n  }\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n}\r\n\r\nGrafanaBoomTableCtrl.prototype.render = function() {\r\n  console.log(\"Rendering\");\r\n  this.panel.data = this.dataComputed;\r\n};\r\n\r\nGrafanaBoomTableCtrl.templateUrl = \"module.html\";\r\n\r\nexport { GrafanaBoomTableCtrl as PanelCtrl };\r\n"]}