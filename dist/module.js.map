{"version":3,"sources":["../src/module.js"],"names":["loadPluginCss","MetricsPanelCtrl","TimeSeries","config","list_of_stylesheets","GrafanaBoomTableCtrl","$scope","$injector","$sce","_","defaults","panel","panelDefaults","events","on","onDataReceived","bind","onInitEditMode","valueNameOptions","each","editorTabs","addEditorTab","editor","name","plugin_id","template","position","data","dataReceived","render","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","newPattern","pattern","delimiter","valueName","row_name","col_name","thresholds","enable_bgColor","bgColors","enable_transform","transform_values","patterns","push","activePatternIndex","length","index","splice","value","c","i","first","t","replace","RegExp","prototype","console","log","dataComputed","map","seriesHandler","find","concat","defaultPattern","p","match","stats","displayValue","split","reduce","r","it","d","bgColor","computeBgColor","transformValue","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import {\r\n  loadPluginCss,\r\n  MetricsPanelCtrl,\r\n  TimeSeries,\r\n  config\r\n} from \"./app/app\"\r\n\r\nloadPluginCss(config.list_of_stylesheets);\r\n\r\nclass GrafanaBoomTableCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, config.panelDefaults);\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n  }\r\n  onInitEditMode() {\r\n    this.valueNameOptions = config.valueNameOptions;\r\n    _.each(config.editorTabs, editor => {\r\n      this.addEditorTab(editor.name, \"public/plugins/\" + config.plugin_id + editor.template, editor.position);\r\n    })\r\n  }\r\n  onDataReceived(data) {\r\n    this.dataReceived = data;\r\n    this.render();\r\n  }\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n  addPattern() {\r\n    var newPattern = {\r\n      pattern: \"^server.*cpu$\",\r\n      delimiter: \".\",\r\n      valueName: \"avg\",\r\n      row_name: \"_0_\",\r\n      col_name: \"_1_\",\r\n      thresholds: \"70,90\",\r\n      enable_bgColor: false,\r\n      bgColors: \"green|orange|red\",\r\n      enable_transform: false,\r\n      transform_values: \"_value_|_value_|_value_\"\r\n    };\r\n    this.panel.patterns.push(newPattern);\r\n    this.panel.activePatternIndex = this.panel.patterns.length - 1;\r\n    this.render();\r\n  }\r\n  removePattern(index) {\r\n    this.panel.patterns.splice(index, 1);\r\n    this.panel.activePatternIndex = -1;\r\n    this.render();\r\n  }\r\n  computeBgColor(thresholds, bgColors, value) {\r\n    var c = \"transparent\";\r\n    if (thresholds && bgColors && value && thresholds.length + 1 === bgColors.length) {\r\n      if (bgColors[bgColors.length - 1] === \"\") {\r\n        bgColors[bgColors.length - 1] = \"transparent\";\r\n      }\r\n      for (var i = thresholds.length; i > 0; i--) {\r\n        if (value >= thresholds[i - 1]) {\r\n          return bgColors[i];\r\n        }\r\n      }\r\n      return _.first(bgColors);\r\n    }\r\n    return c;\r\n  }\r\n  transformValue(thresholds, transform_values, value) {\r\n    var t = value;\r\n    if (thresholds && transform_values && value && thresholds.length + 1 === transform_values.length) {\r\n      if (transform_values[transform_values.length - 1] === \"\") {\r\n        transform_values[transform_values.length - 1] = \"_value_\";\r\n      }\r\n      for (var i = thresholds.length; i > 0; i--) {\r\n        if (value >= thresholds[i - 1]) {\r\n          return transform_values[i].replace(new RegExp(\"_value_\", \"g\"), value);\r\n        }\r\n      }\r\n      return _.first(transform_values).replace(new RegExp(\"_value_\", \"g\"), value);\r\n    }\r\n    return t;\r\n  }\r\n}\r\n\r\nGrafanaBoomTableCtrl.prototype.render = function () {\r\n  if (this.dataReceived) {\r\n    console.log(\"Rendering\");\r\n    // Binding the grafana computations to the metrics received\r\n    this.dataComputed = this.dataReceived.map(this.seriesHandler.bind(this));\r\n    // Assign pattern\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.pattern = _.find(this.panel.patterns.concat(this.panel.defaultPattern), function (p) {\r\n        return series.alias.match(p.pattern || \"\");\r\n      });\r\n      return series;\r\n    });\r\n    // Assign value\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.value = series.stats[series.pattern.valueName || \"avg\"] || \"N/A\";\r\n      series.displayValue = series.value;\r\n      return series;\r\n    });\r\n    // Assign Row Name\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.row_name = series.alias.split(series.pattern.delimiter || \".\").reduce((r, it, i) => {\r\n        return r.replace(new RegExp(\"_\" + i + \"_\", \"g\"), it)\r\n      }, series.pattern.row_name || config.panelDefaults.defaultPattern.row_name);\r\n      if (series.alias.split(series.pattern.delimiter || \".\").length === 1) {\r\n        series.row_name = series.alias;\r\n      }\r\n      return series;\r\n    });\r\n    // Assign Col Name\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.col_name = series.alias.split(series.pattern.delimiter || \".\").reduce((r, it, i) => {\r\n        return r.replace(new RegExp(\"_\" + i + \"_\", \"g\"), it)\r\n      }, series.pattern.col_name || config.panelDefaults.defaultPattern.col_name);\r\n      if (series.alias.split(series.pattern.delimiter || \".\").length === 1) {\r\n        series.col_name = \"value\";\r\n      }\r\n      return series;\r\n    });\r\n    // Assign Thresholds\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.thresholds = (series.pattern.thresholds || config.panelDefaults.defaultPattern.thresholds).split(\",\").map(d => +d);\r\n      return series;\r\n    });\r\n    // Assign BG Colors\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.enable_bgColor = series.pattern.enable_bgColor;\r\n      series.bgColors = (series.pattern.bgColors || config.panelDefaults.defaultPattern.bgColors).split(\"|\");\r\n      series.bgColor = series.enable_bgColor === true ? this.computeBgColor(series.thresholds, series.bgColors, series.value) : \"transparent\";\r\n      return series;\r\n    });\r\n    // Value Transform\r\n    this.dataComputed = this.dataComputed.map(series => {\r\n      series.enable_transform = series.pattern.enable_transform;\r\n      series.transform_values = (series.pattern.transform_values || config.panelDefaults.defaultPattern.transform_values).split(\"|\");\r\n      series.displayValue = series.enable_transform === true ? this.transformValue(series.thresholds, series.transform_values, series.value) : series.displayValue;\r\n      return series;\r\n    });\r\n    // Assigning computed data to output panel\r\n    this.panel.data = this.dataComputed;\r\n  }\r\n};\r\n\r\nGrafanaBoomTableCtrl.templateUrl = \"partials/module.html\";\r\n\r\nexport {\r\n  GrafanaBoomTableCtrl as PanelCtrl\r\n};"]}