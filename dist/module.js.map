{"version":3,"sources":["../src/module.js"],"names":["MetricsPanelCtrl","TimeSeries","config","GrafanaBoomTableCtrl","$scope","$injector","$sce","_","defaults","panel","panelDefaults","events","on","onDataReceived","bind","onInitEditMode","console","log","data","dataReceived","render","seriesData","series","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","prototype","dataComputed","map","seriesHandler","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,sB,WAAAA,gB;AACAC,gB,WAAAA,U;AACAC,Y,WAAAA,M;;;;;;;;;;;;;;;;;;;;;2BAIIC,oB;;;AACJ,sCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqC;AAAA;;AAAA,kJAC7BF,MAD6B,EACrBC,SADqB;;AAEnCE,YAAEC,QAAF,CAAW,MAAKC,KAAhB,EAAuBP,OAAOQ,aAA9B;AACA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,cAAL,CAAoBD,IAApB,OAAjC;AAJmC;AAKpC;;;;2CACgB;AACfE,oBAAQC,GAAR,CAAY,qBAAZ;AACD;;;yCACcC,I,EAAM;AACnB,iBAAKC,YAAL,GAAoBD,IAApB;AACA,iBAAKE,MAAL;AACD;;;wCACaC,U,EAAY;AACxB,gBAAIC,SAAS,IAAIrB,UAAJ,CAAe;AAC1BsB,0BAAYF,WAAWE,UAAX,IAAyB,EADX;AAE1BC,qBAAOH,WAAWI;AAFQ,aAAf,CAAb;AAIAH,mBAAOI,SAAP,GAAmBJ,OAAOK,YAAP,CAAoB,KAAKlB,KAAL,CAAWmB,aAA/B,CAAnB;AACA,mBAAON,MAAP;AACD;;;;QArBgCtB,gB;;AAwBnCG,2BAAqB0B,SAArB,CAA+BT,MAA/B,GAAwC,YAAY;AAClD,YAAI,KAAKD,YAAT,EAAuB;AACrBH,kBAAQC,GAAR,CAAY,WAAZ;AACA;AACA,eAAKa,YAAL,GAAoB,KAAKX,YAAL,CAAkBY,GAAlB,CAAsB,KAAKC,aAAL,CAAmBlB,IAAnB,CAAwB,IAAxB,CAAtB,CAApB;AACA;AACA,eAAKL,KAAL,CAAWS,IAAX,GAAkB,KAAKY,YAAvB;AACD;AACF,OARD;;AAUA3B,2BAAqB8B,WAArB,GAAmC,sBAAnC;;2BAGE9B,oB","file":"module.js","sourcesContent":["import {\r\n  MetricsPanelCtrl,\r\n  TimeSeries,\r\n  config\r\n} from \"./app/app\"\r\n\r\n\r\nclass GrafanaBoomTableCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, config.panelDefaults);\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n  }\r\n  onInitEditMode() {\r\n    console.log(\"Edit mode activated\");\r\n  }\r\n  onDataReceived(data) {\r\n    this.dataReceived = data;\r\n    this.render();\r\n  }\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints || [],\r\n      alias: seriesData.target\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n}\r\n\r\nGrafanaBoomTableCtrl.prototype.render = function () {\r\n  if (this.dataReceived) {\r\n    console.log(\"Rendering\");\r\n    // Binding the grafana computations to the metrics received\r\n    this.dataComputed = this.dataReceived.map(this.seriesHandler.bind(this));\r\n    // Assigning computed data to output panel\r\n    this.panel.data = this.dataComputed;\r\n  }\r\n};\r\n\r\nGrafanaBoomTableCtrl.templateUrl = \"partials/module.html\";\r\n\r\nexport {\r\n  GrafanaBoomTableCtrl as PanelCtrl\r\n};"]}